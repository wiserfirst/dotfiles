set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>

" highlight search
set hlsearch
nmap <leader>hl :let @/ = ""<CR>

" count match of last search pattern
nnoremap <leader>n :%s///gn<CR>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  set background=dark
  set guifont=Monaco:h14
  set lines=999 columns=999
  set guioptions-=r  "remove right-hand scroll bar
  set guioptions-=L  "remove left-hand scroll bar
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme elflord
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" Custom configuration

set hidden

" auto reload vimrc when editing it
autocmd! bufwritepost .vimrc.local source $HOME/.vimrc.local

" TAB setting{
   set expandtab        "replace <TAB> with spaces

   au FileType Makefile set noexpandtab
   autocmd FileType php set tabstop=4
   autocmd FileType php set softtabstop=4
   autocmd FileType php set shiftwidth=4
"}

" allow multiple indentation/deindentation in visual mode
vnoremap < <gv
vnoremap > >gv

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" ignore git/hg/svn directory for ctrlp
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

let g:mix_format_on_save = 1
let g:mix_format_silent_errors = 1

" for Elixir and OTP source
let g:alchemist#elixir_erlang_src = "$HOME/work/open-source"
" Docker compile directory
let g:alchemist_compile_basepath = "/usr/src/expert360com/main/backend"

" make test commands execute using iterm
let test#strategy = "iterm"
